name: build

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        python_version:
          - "3.8.1"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

        os:
          - 'ubuntu'
          - 'macos'
          - 'windows'

    runs-on: ${{ matrix.os }}-latest

    timeout-minutes: 10
    concurrency:
      group: ci-tests-${{ matrix.os }}-${{ matrix.python_version }}-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v3

    - name: Install MacOS extra tools and add extra setup
      if: ${{ matrix.os == 'macos' }}
      run: |
        sudo mkdir -p /tmp
        sudo chmod 777 /tmp

        brew install gnu-sed
        echo 'export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"' >> ~/.bashrc
        echo 'export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"' >> ~/.bash_profile

    - name: Prepare conda environment (windows)
      if: ${{ matrix.os == 'windows' }}
      run: |
        $env:Path += ";C:\Program Files\Git\usr\bin"
        sed -i s/python\ 3\.8/python\ ${{ matrix.python_version }}/ conda/dev.yaml
        cat conda/dev.yaml

    - name: Prepare conda environment
      if: ${{ matrix.os != 'windows' }}
      run: |
        sed -i s/python\ 3\.8\.1/python\ ${{ matrix.python_version }}/ conda/dev.yaml
        cat conda/dev.yaml

    - uses: conda-incubator/setup-miniconda@v3
      with:
        miniconda-version: "latest"
        environment-file: conda/dev.yaml
        channels: conda-forge,nodefaults
        channel-priority: true
        activate-environment: envers
        auto-update-conda: true
        conda-solver: libmamba

    - name: Install dependencies
      run: |
        poetry install

    - name: Run tests
      run: |
        makim tests.unit

    - name: Run smoke tests
      run: |
        makim tests.smoke

    - name: Run style checks
      run: |
        pre-commit install
        makim tests.linter
